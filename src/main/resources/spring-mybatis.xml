<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		">

	<!-- 配置数据源 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<property name="maxWait" value="${jdbc.maxWait}" />
		<property name="validationQuery" value="${jdbc.validationQuery}" />
	</bean>
	
	<!-- 配置sqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath*:com/accred/mapper/*.xml" />
	</bean>
	
	 <!-- 配置扫描器 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 扫描com.accred.logic这个包以及它的子包下的所有映射接口类 -->
        <property name="basePackage" value="com.accred.logic" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>
	
	<!-- 配置Spring的事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    
    <bean id="transactionAttributes" class="org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource">
    <property name="properties">
      <props>
       <!--  PROPAGATION_SUPPORTS: 已经存在事务则加入事务，没有事务则以非事务的方式执行
        PROPAGATION_MANDATORY: 使用当前事务，没有事务则抛出异常
        PROPAGATION_REQUIRED: 新建事务，已经存在事务则挂起
        ROPAGATION_NOT_SUPPORTED: 以非事务的方式执行，已经存在事务则挂起
        PROPAGATION_NEVER: 以非事务的方式执行，已经存在事务则抛出异常
        +/-Exception: + 表示异常出现时事物提交 ，- 表示异常出现时事务回滚 -->
        <prop key="insert*">PROPAGATION_REQUIRED,-SQLException</prop>
        <prop key="update*">PROPAGATION_REQUIRED,-SQLException</prop>
        <prop key="delete*">PROPAGATION_REQUIRED,-SQLException</prop>
        <prop key="remove*">PROPAGATION_REQUIRED,-SQLException</prop>
        <prop key="apply*">PROPAGATION_NESTED,-SQLException</prop>
      </props>
    </property>
  </bean>

  <bean id="transactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
    <property name="transactionManager" ref="transactionManager" />
    <property name="transactionAttributeSource" ref="transactionAttributes" />
  </bean>
<!-- 
  针对类名，使用代理模式控制事务，全局有效 -->
  <bean id="BeanProxy" class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
    <property name="beanNames">
      <list>
        <value>*Service</value>
        <value>*LS</value>
      </list>
    </property>
    <property name="interceptorNames">
      <list>
        <value>transactionInterceptor</value>
      </list>
    </property>
  </bean>
   	
</beans>